@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --grid-size: 20px;
  --grid-color: rgba(147, 197, 253, 0.1);
  --grid-bg-color: rgba(147, 197, 253, 0.05);
  --liquid-color: rgba(147, 197, 253, 0.12);
  --mouse-x: 50%;
  --mouse-y: 50%;
  --effect-size: 50px;
  --flow-intensity: 0.8;
  --neon-glow: rgba(147, 197, 253, 0.5);
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

.liquid-grid {
  background-image: 
    linear-gradient(var(--grid-color) 1px, transparent 1px),
    linear-gradient(90deg, var(--grid-color) 1px, transparent 1px);
  background-size: var(--grid-size) var(--grid-size);
  background-position: center center;
  position: relative;
  transition: all 0.5s ease-out;
}

.liquid-grid.reversed {
  background-image: 
    linear-gradient(transparent 1px, var(--grid-bg-color) 1px),
    linear-gradient(90deg, transparent 1px, var(--grid-bg-color) 1px);
  background-color: var(--grid-color);
}

.reverse-button {
  position: fixed;
  top: 1rem;
  right: 1rem;
  z-index: 50;
  background-color: rgba(30, 41, 59, 0.8);
  color: rgba(147, 197, 253, 0.8);
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  backdrop-filter: blur(4px);
  border: 1px solid rgba(147, 197, 253, 0.2);
  transition: all 0.2s ease-out;
}

.reverse-button:hover {
  background-color: rgba(30, 41, 59, 0.9);
  color: rgba(147, 197, 253, 1);
  border-color: rgba(147, 197, 253, 0.4);
}

.reverse-button:focus {
  outline: none;
  ring: 2px solid rgba(147, 197, 253, 0.5);
}

/* Laminar flow container */
.flow-container {
  pointer-events: none;
  position: fixed;
  width: calc(var(--effect-size) * 3);
  height: calc(var(--effect-size) * 3);
  transform: translate(-50%, -50%);
  z-index: 1;
  opacity: 0;
  transition: opacity 0.15s ease-out;
}

.flow-container.is-hovering {
  opacity: 1;
}

/* Flow effect layers */
.flow-layer {
  position: absolute;
  inset: -20px;
  background-image: 
    linear-gradient(var(--grid-color) 1px, transparent 1px),
    linear-gradient(90deg, var(--grid-color) 1px, transparent 1px);
  background-size: var(--grid-size) var(--grid-size);
  mask-image: radial-gradient(circle at center, 
    black 0%,
    black 30%,
    transparent 70%
  );
}

.flow-layer-1 {
  animation: flowEffect1 0.6s ease-out infinite;
  opacity: 0.9;
}

.flow-layer-2 {
  animation: flowEffect2 0.6s ease-out infinite;
  opacity: 0.7;
  animation-delay: 0.1s;
}

.flow-layer-3 {
  animation: flowEffect3 0.6s ease-out infinite;
  opacity: 0.5;
  animation-delay: 0.2s;
}

/* Laminar flow animations */
@keyframes flowEffect1 {
  0% {
    transform: translateY(0) scale(1);
  }
  100% {
    transform: translateY(calc(var(--grid-size) * var(--flow-intensity))) scale(1.05);
  }
}

@keyframes flowEffect2 {
  0% {
    transform: translateY(calc(var(--grid-size) * -0.2)) scale(1);
  }
  100% {
    transform: translateY(calc(var(--grid-size) * (var(--flow-intensity) + 0.2))) scale(1.1);
  }
}

@keyframes flowEffect3 {
  0% {
    transform: translateY(calc(var(--grid-size) * -0.4)) scale(1);
  }
  100% {
    transform: translateY(calc(var(--grid-size) * (var(--flow-intensity) + 0.4))) scale(1.15);
  }
}

/* Trail effect */
.flow-trail {
  position: absolute;
  width: 100%;
  height: 100%;
  background: radial-gradient(
    circle at center,
    var(--liquid-color) 0%,
    transparent 70%
  );
  opacity: 0.3;
  filter: blur(8px);
  mix-blend-mode: screen;
}

.is-paused .flow-layer {
  animation-play-state: paused;
}

/* Grid distortion container */
.grid-distortion {
  pointer-events: none;
  position: fixed;
  width: var(--effect-size);
  height: var(--effect-size);
  transform: translate(-50%, -50%);
  z-index: 1;
  opacity: 0;
  transition: opacity 0.2s ease-out;
  border-radius: 50%;
  overflow: hidden;
  filter: url('#liquid');
}

.grid-distortion.is-hovering {
  opacity: 1;
}

.grid-distortion.is-paused::before,
.grid-distortion.is-paused::after {
  animation-play-state: paused;
}

/* Distorted grid inside the container */
.grid-distortion::before {
  content: '';
  position: absolute;
  inset: -20px;
  background-image: 
    linear-gradient(var(--grid-color) 1px, transparent 1px),
    linear-gradient(90deg, var(--grid-color) 1px, transparent 1px);
  background-size: var(--grid-size) var(--grid-size);
  animation: liquidDistort 0.8s linear infinite;
}

/* Multiple grid layers for more chaos */
.grid-distortion::after {
  content: '';
  position: absolute;
  inset: -20px;
  background-image: 
    linear-gradient(var(--grid-color) 1px, transparent 1px),
    linear-gradient(90deg, var(--grid-color) 1px, transparent 1px);
  background-size: var(--grid-size) var(--grid-size);
  animation: liquidDistort2 0.6s linear infinite;
  opacity: 0.7;
  filter: url('#liquid');
}

/* Glow effect */
.mouse-follower {
  pointer-events: none;
  position: fixed;
  width: var(--effect-size);
  height: var(--effect-size);
  transform: translate(-50%, -50%);
  z-index: 2;
  opacity: 0;
  transition: opacity 0.2s ease-out;
  filter: url('#goo');
}

.mouse-follower::before,
.mouse-follower::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 50%;
  opacity: 0;
  transition: all 0.2s ease-out;
}

.mouse-follower::before {
  background: radial-gradient(
    circle at center,
    var(--liquid-color) 0%,
    transparent 70%
  );
  filter: blur(10px);
  mix-blend-mode: screen;
  animation: liquidGlow1 0.5s ease-in-out infinite;
}

.mouse-follower::after {
  background: radial-gradient(
    circle at center,
    var(--liquid-color) 0%,
    transparent 60%
  );
  filter: blur(8px);
  mix-blend-mode: overlay;
  animation: liquidGlow2 0.7s ease-in-out infinite;
}

.mouse-follower.is-hovering,
.mouse-follower.is-hovering::before,
.mouse-follower.is-hovering::after {
  opacity: 1;
}

.grid-distortion.is-paused::before,
.grid-distortion.is-paused::after,
.mouse-follower.is-paused::before,
.mouse-follower.is-paused::after {
  animation-play-state: paused;
}

@keyframes liquidDistort {
  0% {
    transform: scale(1.2) rotate(0deg) translate(0px, 0px) skew(0deg, 0deg);
    border-radius: 40% 60% 60% 40% / 60% 30% 70% 40%;
  }
  20% {
    transform: scale(1.3) rotate(2deg) translate(3px, -2px) skew(-2deg, 1deg);
    border-radius: 62% 38% 48% 52% / 37% 61% 39% 63%;
  }
  40% {
    transform: scale(1.2) rotate(-3deg) translate(-4px, 3px) skew(1deg, -2deg);
    border-radius: 44% 56% 52% 48% / 39% 47% 53% 61%;
  }
  60% {
    transform: scale(1.25) rotate(1deg) translate(2px, 2px) skew(-1deg, 2deg);
    border-radius: 58% 42% 57% 43% / 44% 57% 43% 56%;
  }
  80% {
    transform: scale(1.15) rotate(-2deg) translate(-2px, -3px) skew(2deg, -1deg);
    border-radius: 39% 61% 42% 58% / 55% 43% 57% 45%;
  }
  100% {
    transform: scale(1.2) rotate(0deg) translate(0px, 0px) skew(0deg, 0deg);
    border-radius: 40% 60% 60% 40% / 60% 30% 70% 40%;
  }
}

@keyframes liquidDistort2 {
  0% {
    transform: scale(1.1) rotate(0deg) translate(0px, 0px) skew(0deg, 0deg);
    border-radius: 55% 45% 40% 60% / 45% 55% 45% 55%;
  }
  25% {
    transform: scale(1.2) rotate(-2deg) translate(-3px, 2px) skew(2deg, -1deg);
    border-radius: 41% 59% 47% 53% / 52% 48% 52% 48%;
  }
  50% {
    transform: scale(1.15) rotate(3deg) translate(2px, -3px) skew(-2deg, 2deg);
    border-radius: 48% 52% 57% 43% / 59% 41% 59% 41%;
  }
  75% {
    transform: scale(1.1) rotate(-1deg) translate(-2px, -2px) skew(1deg, -1deg);
    border-radius: 53% 47% 43% 57% / 46% 54% 46% 54%;
  }
  100% {
    transform: scale(1.1) rotate(0deg) translate(0px, 0px) skew(0deg, 0deg);
    border-radius: 55% 45% 40% 60% / 45% 55% 45% 55%;
  }
}

@keyframes liquidGlow1 {
  0% {
    transform: scale(1) rotate(0deg);
    opacity: 0.8;
    border-radius: 45% 55% 55% 45% / 55% 45% 55% 45%;
  }
  50% {
    transform: scale(1.1) rotate(180deg);
    opacity: 1;
    border-radius: 55% 45% 45% 55% / 45% 55% 45% 55%;
  }
  100% {
    transform: scale(1) rotate(360deg);
    opacity: 0.8;
    border-radius: 45% 55% 55% 45% / 55% 45% 55% 45%;
  }
}

@keyframes liquidGlow2 {
  0% {
    transform: scale(1.1) rotate(0deg);
    opacity: 0.7;
    border-radius: 60% 40% 40% 60% / 40% 60% 40% 60%;
  }
  50% {
    transform: scale(0.9) rotate(-180deg);
    opacity: 0.9;
    border-radius: 40% 60% 60% 40% / 60% 40% 60% 40%;
  }
  100% {
    transform: scale(1.1) rotate(-360deg);
    opacity: 0.7;
    border-radius: 60% 40% 40% 60% / 40% 60% 40% 60%;
  }
}

/* Neon box styles */
.neon-box {
  position: relative;
  background: rgba(26, 26, 46, 0.3);
  border-radius: 1rem;
  overflow: hidden;
  backdrop-filter: blur(10px);
}

.neon-box::before {
  content: '';
  position: absolute;
  inset: -1px;
  background: linear-gradient(
    45deg,
    transparent 0%,
    var(--neon-glow) 50%,
    transparent 100%
  );
  z-index: -1;
  animation: neonPulse 2s ease-in-out infinite;
}

.neon-box::after {
  content: '';
  position: absolute;
  inset: 1px;
  background: rgba(26, 26, 46, 0.95);
  border-radius: 0.9rem;
  z-index: -1;
}

/* Loading animation */
.loading-container {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.loading-blur {
  position: absolute;
  inset: 0;
  backdrop-filter: blur(8px);
  background: rgba(26, 26, 46, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
}

.loading-spinner {
  width: 50px;
  height: 50px;
  border: 3px solid var(--neon-glow);
  border-radius: 50%;
  border-top-color: transparent;
  animation: spin 1s linear infinite;
}

.loading-ripple {
  position: absolute;
  width: 100px;
  height: 100px;
  border: 2px solid var(--neon-glow);
  border-radius: 50%;
  animation: ripple 1.5s cubic-bezier(0.23, 1, 0.32, 1) infinite;
  opacity: 0;
}

.loading-ripple:nth-child(2) {
  animation-delay: 0.5s;
}

.loading-ripple:nth-child(3) {
  animation-delay: 1s;
}

@keyframes neonPulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes ripple {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }
  50% {
    opacity: 0.3;
  }
  100% {
    transform: scale(1.5);
    opacity: 0;
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

